name: Deploy Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Run tests
        run: pytest

      - name: Bump version and push tag
        id: version
        run: |
          git config --global user.email "manishabheemanpally@gmail.com"
          git config --global user.name "manishabheemanpally"

          current_version=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
          echo "Current version: $current_version"

          new_version=$(echo $current_version | awk -F. -v OFS=. '{$NF++;print}')
          echo "New version: $new_version"

          if git rev-parse "refs/tags/$new_version" >/dev/null 2>&1; then
            echo "Tag $new_version already exists. Skipping tag creation."
            echo "new_version=" >> $GITHUB_ENV
          else
            git tag $new_version
            echo "new_version=$new_version" >> $GITHUB_ENV
          fi

      - name: Push new version tag
        if: env.new_version != ''
        env:
          GH_PAT: ${{ secrets.MY_SECRET_TOKEN }}
        run: |
          git push https://x-access-token:${{ secrets.MY_SECRET_TOKEN }}@github.com/manishabheemanpally/pythontask.git ${{ env.new_version }}

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Deploy to another repository
        env:
          GH_PAT: ${{ secrets.MY_SECRET_TOKEN }}
        run: |
          git config --global user.email "manishabheemanpally@gmail.com"
          git config --global user.name "manishabheemanpally"

          git remote add target_repo https://x-access-token:${{ secrets.MY_SECRET_TOKEN }}@github.com/manishabheemanpally/deployrepo.git
          git fetch target_repo

          # Ensure the target branch exists
          if git show-ref --quiet refs/heads/mainbranch; then
            git checkout mainbranch
          else
            git checkout -b mainbranch
          fi

          git merge main --no-ff --no-edit
          git push target_repo mainbranch
